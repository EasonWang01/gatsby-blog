{"version":3,"sources":["webpack:///../theme/src/pages/archive.tsx","webpack:///../theme/src/components/card/style.tsx","webpack:///../theme/src/components/card/index.tsx","webpack:///../theme/src/components/subheader/index.tsx","webpack:///../node_modules/core-js/modules/es6.string.small.js","webpack:///../theme/src/components/post-grid/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_subheader__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_post_grid__WEBPACK_IMPORTED_MODULE_4__","ArchivePage","_ref","data","location","posts","allPosts","edges","map","node","a","createElement","bigHeader","title","type","subtitle","length","StyledCard","styled","Link","withConfig","displayName","componentId","StyledArticle","article","Theme","breakpoints","sm","FeaturedImage","Img","props","halfImage","CardContent","section","compact","CardMeta","CardTitle","h2","Card","meta","path","featuredImage","content","_ref$halfImage","_ref$compact","style","children","react_default","to","fixed","sizes","tag","Fragment","time","dateTime","timePretty","dangerouslySetInnerHTML","__html","StyledSubheader","div","backgroundColor","textColor","SubheaderTitle","h1","SubheaderSubtitle","small","Subheader","react__WEBPACK_IMPORTED_MODULE_1___default","_common__WEBPACK_IMPORTED_MODULE_3__","createHTML","this","_common__WEBPACK_IMPORTED_MODULE_1__","_card__WEBPACK_IMPORTED_MODULE_2__","PostGrid","post","index","frontmatter","childImageSharp","excerpt","key","created","createdPretty","tags"],"mappings":"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","file":"component---theme-src-pages-archive-tsx-eefb56938dcddf2fd290.js","sourcesContent":["import React, {FunctionComponent} from \"react\";\nimport Layout from \"../components/layout\";\nimport {graphql} from \"gatsby\";\nimport {Post} from \"../utils/models\";\nimport Subheader from \"../components/subheader\";\nimport SEO from \"../components/seo\";\nimport PostGrid from \"../components/post-grid\";\n\ninterface ArchivePageProps {\n  data: {\n    allPosts: {\n      edges: Array<{ node: Post }>;\n    };\n  };\n  location: Location;\n}\n\nconst ArchivePage: FunctionComponent<ArchivePageProps> = ({data, location}) => {\n  const posts = data.allPosts.edges.map(node => node.node) as Post[];\n\n  return (\n    <Layout bigHeader={false}>\n      <SEO\n        location={location}\n        title={`Archive`}\n        type={`Series`}\n      />\n      <Subheader title={`Archive`} subtitle={`${posts.length} posts`}/>\n      <PostGrid posts={posts} />\n    </Layout>\n  );\n};\n\nexport default ArchivePage;\n\nexport const query = graphql`\n  query {\n    allPosts: allMarkdownRemark(\n        filter: { fileAbsolutePath: { regex: \"/(posts)/.*\\\\\\\\.md$/\" } }\n        sort: { fields: frontmatter___created, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              path\n              tags\n              excerpt\n              created\n              createdPretty: created(formatString: \"DD MMMM, YYYY\")\n              featuredImage {\n                childImageSharp {\n                  sizes(maxWidth: 500, quality: 100) {\n                    base64\n                    aspectRatio\n                    src\n                    srcSet\n                    sizes\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n`;\n","import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: cover;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, {CSSProperties, FunctionComponent, ReactNode} from \"react\";\nimport {CardContent, CardMeta, CardTitle, FeaturedImage, StyledArticle, StyledCard} from \"./style\";\n\nexport interface CardProps {\n  title?: string;\n  path: string;\n  featuredImage?: any;\n  content?: string;\n  meta?: {\n    time: string;\n    timePretty: string;\n    tag: string | null;\n  };\n  halfImage?: boolean;\n  compact?: boolean;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n                                                     title,\n                                                     meta,\n                                                     path,\n                                                     featuredImage,\n                                                     content,\n                                                     halfImage = false,\n                                                     compact = false,\n                                                     style,\n                                                     children,\n                                                   }) => (\n  <StyledArticle style={style}>\n    <StyledCard to={path}>\n      {/* TODO: Oh boy... */}\n      {(featuredImage && featuredImage.fixed) &&\n      <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage}/>\n      }\n      {(featuredImage && featuredImage.sizes) &&\n      <FeaturedImage sizes={featuredImage.sizes} halfImage={halfImage}/>\n      }\n      <CardContent compact={compact}>\n        {children}\n        <header>\n          {meta &&\n          <CardMeta>\n            {meta.tag && <>{meta.tag}</>}\n            {meta.time &&\n            <time dateTime={meta.time}>{meta.timePretty}</time>\n            }\n          </CardMeta>\n          }\n          {title &&\n          <CardTitle>{title}</CardTitle>\n          }\n        </header>\n        {content &&\n        <p dangerouslySetInnerHTML={{__html: content}}/>\n        }\n      </CardContent>\n    </StyledCard>\n  </StyledArticle>\n);\n","import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"../common\";\n\ninterface SubheaderProps {\n  title: string;\n  subtitle?: string;\n  backgroundColor?: string;\n  textColor?: string;\n}\n\nconst StyledSubheader = styled.div<Pick<SubheaderProps, 'backgroundColor' | 'textColor'>>`\n  background-color: ${props => props.backgroundColor ? props.backgroundColor : '#000'};\n  color: ${props => props.textColor ? props.textColor : '#fff'};\n  display: flex;\n  align-items: center;\n  height: 90px;\n  margin-bottom: 30px;\n`;\n\nconst SubheaderTitle = styled.h1`\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #fff;\n  margin: 0;\n  line-height: 1em;\n`;\n\nconst SubheaderSubtitle = styled.small`\n  font-weight: normal;\n  display: block;\n  opacity: .9;\n`;\n\nconst Subheader: FunctionComponent<SubheaderProps> = ({title, subtitle, backgroundColor, textColor}) => (\n  <StyledSubheader backgroundColor={backgroundColor} textColor={textColor}>\n    <Container>\n      <SubheaderTitle>\n        {title}\n        <SubheaderSubtitle>{subtitle}</SubheaderSubtitle>\n      </SubheaderTitle>\n    </Container>\n  </StyledSubheader>\n);\n\nexport default Subheader;\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","import React, {FunctionComponent} from \"react\";\nimport {Post} from \"../../utils/models\";\nimport {Grid} from \"../common\";\nimport {Card} from \"../card\";\n\ninterface PostGridProps {\n  posts: Post[];\n}\n\nconst PostGrid: FunctionComponent<PostGridProps> = ({posts}) => (\n  <Grid>\n    {posts.map((post, index) => (\n      <Card\n        title={post.frontmatter.title}\n        path={post.frontmatter.path}\n        featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\n        content={post.frontmatter.excerpt}\n        key={index}\n        meta={\n          {\n            time: post.frontmatter.created,\n            timePretty: post.frontmatter.createdPretty,\n            tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n          }\n        }\n      />\n    ))}\n  </Grid>\n);\n\nexport default PostGrid;\n"],"sourceRoot":""}