{"version":3,"sources":["webpack:///../theme/src/templates/tag.tsx","webpack:///../theme/src/components/card/style.tsx","webpack:///../theme/src/components/card/index.tsx","webpack:///../theme/src/components/subheader/index.tsx","webpack:///../node_modules/core-js/modules/es6.string.small.js","webpack:///../theme/src/components/post-grid/index.tsx"],"names":["TagTemplate","_ref","data","location","tag","posts","edges","map","node","length","name","frontmatter","tags","color","Theme","layout","primaryColor","icon","featured","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","bigHeader","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","type","_components_subheader__WEBPACK_IMPORTED_MODULE_3__","subtitle","backgroundColor","_components_post_grid__WEBPACK_IMPORTED_MODULE_6__","query","StyledCard","styled","Link","withConfig","displayName","componentId","StyledArticle","article","breakpoints","sm","FeaturedImage","Img","props","halfImage","CardContent","section","compact","CardMeta","CardTitle","h2","Card","meta","path","featuredImage","content","_ref$halfImage","_ref$compact","style","children","react_default","to","fixed","sizes","Fragment","time","dateTime","timePretty","dangerouslySetInnerHTML","__html","StyledSubheader","div","textColor","SubheaderTitle","h1","SubheaderSubtitle","small","Subheader","_common__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","createHTML","this","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_common__WEBPACK_IMPORTED_MODULE_1__","_card__WEBPACK_IMPORTED_MODULE_2__","PostGrid","post","index","childImageSharp","excerpt","key","created","createdPretty"],"mappings":"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","file":"component---theme-src-templates-tag-tsx-00f2ce0566f2229b9b0c.js","sourcesContent":["import React, {FunctionComponent} from \"react\";\nimport Layout from \"../components/layout\";\nimport {graphql} from \"gatsby\";\nimport {Post, Tag} from \"../utils/models\";\nimport Subheader from \"../components/subheader\";\nimport SEO from \"../components/seo\";\nimport Theme from \"../styles/theme\";\nimport PostGrid from \"../components/post-grid\";\n\ninterface TagTemplateProps {\n  data: {\n    tag: Tag;\n    posts: {\n      edges: Array<{ node: Post }>;\n    }\n  };\n  location: Location;\n}\n\nconst TagTemplate: FunctionComponent<TagTemplateProps> = ({data, location}) => {\n  let tag     = data.tag;\n  const posts = data.posts.edges.map(node => node.node);\n\n  if (! tag && posts.length > 0) {\n    tag = {\n      name: posts[0].frontmatter.tags[0],\n      color: Theme.layout.primaryColor,\n      icon: null,\n      featured: false,\n    };\n  }\n\n  return (\n    <Layout bigHeader={false}>\n      <SEO\n        title={tag.name}\n        location={location}\n        type={`Series`}\n      />\n      <Subheader title={tag.name} subtitle={`${posts.length} posts`} backgroundColor={tag.color}/>\n      <PostGrid posts={posts} />\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nexport const query = graphql`\n  query($tag: String!) {\n    tag: tags(name: { eq: $tag }) {\n      name\n      color\n    }\n    posts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: {regex: \"/(posts)/.*\\\\\\\\.md$/\"},\n        frontmatter: {tags: {eq: $tag}}\n      },\n      sort: {fields: frontmatter___created, order: DESC}\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            tags\n            excerpt\n            created\n            createdPretty: created(formatString: \"DD MMMM, YYYY\")\n            featuredImage {\n              childImageSharp {\n                sizes(maxWidth: 800, quality: 100) {\n                  base64\n                  aspectRatio\n                  src\n                  srcSet\n                  sizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: cover;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, {CSSProperties, FunctionComponent, ReactNode} from \"react\";\nimport {CardContent, CardMeta, CardTitle, FeaturedImage, StyledArticle, StyledCard} from \"./style\";\n\nexport interface CardProps {\n  title?: string;\n  path: string;\n  featuredImage?: any;\n  content?: string;\n  meta?: {\n    time: string;\n    timePretty: string;\n    tag: string | null;\n  };\n  halfImage?: boolean;\n  compact?: boolean;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n                                                     title,\n                                                     meta,\n                                                     path,\n                                                     featuredImage,\n                                                     content,\n                                                     halfImage = false,\n                                                     compact = false,\n                                                     style,\n                                                     children,\n                                                   }) => (\n  <StyledArticle style={style}>\n    <StyledCard to={path}>\n      {/* TODO: Oh boy... */}\n      {(featuredImage && featuredImage.fixed) &&\n      <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage}/>\n      }\n      {(featuredImage && featuredImage.sizes) &&\n      <FeaturedImage sizes={featuredImage.sizes} halfImage={halfImage}/>\n      }\n      <CardContent compact={compact}>\n        {children}\n        <header>\n          {meta &&\n          <CardMeta>\n            {meta.tag && <>{meta.tag}</>}\n            {meta.time &&\n            <time dateTime={meta.time}>{meta.timePretty}</time>\n            }\n          </CardMeta>\n          }\n          {title &&\n          <CardTitle>{title}</CardTitle>\n          }\n        </header>\n        {content &&\n        <p dangerouslySetInnerHTML={{__html: content}}/>\n        }\n      </CardContent>\n    </StyledCard>\n  </StyledArticle>\n);\n","import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {Container} from \"../common\";\n\ninterface SubheaderProps {\n  title: string;\n  subtitle?: string;\n  backgroundColor?: string;\n  textColor?: string;\n}\n\nconst StyledSubheader = styled.div<Pick<SubheaderProps, 'backgroundColor' | 'textColor'>>`\n  background-color: ${props => props.backgroundColor ? props.backgroundColor : '#000'};\n  color: ${props => props.textColor ? props.textColor : '#fff'};\n  display: flex;\n  align-items: center;\n  height: 90px;\n  margin-bottom: 30px;\n`;\n\nconst SubheaderTitle = styled.h1`\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #fff;\n  margin: 0;\n  line-height: 1em;\n`;\n\nconst SubheaderSubtitle = styled.small`\n  font-weight: normal;\n  display: block;\n  opacity: .9;\n`;\n\nconst Subheader: FunctionComponent<SubheaderProps> = ({title, subtitle, backgroundColor, textColor}) => (\n  <StyledSubheader backgroundColor={backgroundColor} textColor={textColor}>\n    <Container>\n      <SubheaderTitle>\n        {title}\n        <SubheaderSubtitle>{subtitle}</SubheaderSubtitle>\n      </SubheaderTitle>\n    </Container>\n  </StyledSubheader>\n);\n\nexport default Subheader;\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","import React, {FunctionComponent} from \"react\";\nimport {Post} from \"../../utils/models\";\nimport {Grid} from \"../common\";\nimport {Card} from \"../card\";\n\ninterface PostGridProps {\n  posts: Post[];\n}\n\nconst PostGrid: FunctionComponent<PostGridProps> = ({posts}) => (\n  <Grid>\n    {posts.map((post, index) => (\n      <Card\n        title={post.frontmatter.title}\n        path={post.frontmatter.path}\n        featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\n        content={post.frontmatter.excerpt}\n        key={index}\n        meta={\n          {\n            time: post.frontmatter.created,\n            timePretty: post.frontmatter.createdPretty,\n            tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n          }\n        }\n      />\n    ))}\n  </Grid>\n);\n\nexport default PostGrid;\n"],"sourceRoot":""}