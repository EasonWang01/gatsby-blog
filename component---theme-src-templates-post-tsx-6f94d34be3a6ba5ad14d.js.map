{"version":3,"sources":["webpack:///../theme/src/components/toc/index.tsx","webpack:///../theme/src/components/reading-progress/index.tsx","webpack:///../theme/src/components/comments/index.tsx","webpack:///../theme/src/templates/post.tsx","webpack:///../theme/src/components/social-channel-list/index.tsx","webpack:///../theme/src/components/avatar/index.tsx","webpack:///../theme/src/components/bio/index.tsx"],"names":["StyledNav","styled","nav","withConfig","displayName","componentId","Toc","_ref","onClick","useEffect","tocbot","init","tocSelector","contentSelector","headingSelector","scrollSmooth","scrollSmoothDuration","destroy","react_default","a","createElement","className","ReadingProgressBar","div","props","color","Theme","layout","primaryColor","ReadingProgress","target","_useState","useState","readingProgress","setReadingProgress","scrollListener","current","element","totalHeight","clientHeight","offsetTop","window","innerHeight","windowScrollTop","pageYOffset","document","documentElement","scrollTop","body","addEventListener","removeEventListener","style","width","Comments","Fragment","PostContainer","Container","LeftSidebar","breakpoints","xl","show","PostContent","linkColor","backgroundColor","TocWrapper","PostHeader","header","sm","FeaturedImage","Img","StyledPost","section","PostMeta","PostTitle","h1","PostFooter","footer","FooterTagLink","Link","PostAddition","PostAdditionContent","BioWrapper","ToggleTocButton","button","query","PostTemplate","data","location","showToc","setShowToc","post","readingProgressRef","createRef","primaryTag","toggleToc","bigHeader","seo","title","frontmatter","publishedAt","created","updatedAt","updated","tags","description","excerpt","image","featuredImage","childImageSharp","sizes","src","reading_progress","undefined","headings","find","h","depth","toc","role","aria-label","index_esm","ref","length","gatsby_browser_entry","to","slugify","lower","dateTime","createdPretty","dangerouslySetInnerHTML","__html","html","map","tag","index","key","updatedPretty","bio","textAlign","showName","comments","StyledSocialChannels","ul","StyledSocialChannel","li","SocialChannelList","channels","Object","keys","filter","c","channel","href","rel","createSocialIcon","StyledAvatar","Avatar","alt","logo","_3184828678","fixed","file","StyledBio","AuthorDescription","p","AuthorName","h3","Bio","_ref$textAlign","avatarStyle","_ref$showName","author","_3707852824","site","siteMetadata","avatar","name","social_channel_list","social"],"mappings":"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","file":"component---theme-src-templates-post-tsx-6f94d34be3a6ba5ad14d.js","sourcesContent":["import React, {FunctionComponent, useEffect} from \"react\";\nimport tocbot from 'tocbot';\nimport styled from \"styled-components\";\n\ninterface TocProps {\n  /**\n   * Callback triggered whenever the TOC is clicked. Used for\n   * hiding the mobile toc overlay when clicking on a link.\n   */\n  onClick: () => void;\n}\n\nconst StyledNav = styled.nav`\n  .toc-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n\n    .toc-list {\n      padding-left: 17px;\n      padding-top: 10px;\n    }\n  }\n\n  .toc-list-item {\n    line-height: 1.2em;\n    padding-bottom: 10px;\n\n    &:last-child {\n      padding-bottom: 0;\n    }\n  }\n\n  .toc-link {\n    color: #808080;\n    text-decoration: none;\n  }\n\n  .is-active-link {\n    color: #404040;\n    font-weight: 700;\n  }\n`;\n\nconst Toc: FunctionComponent<TocProps> = ({onClick}) => {\n  useEffect(() => {\n    tocbot.init({\n      tocSelector: `.toc`,\n      contentSelector: `.post`,\n      headingSelector: `h2,h3`,\n      scrollSmooth: true,\n      scrollSmoothDuration: 1,\n    });\n\n    return () => tocbot.destroy();\n  });\n\n  return (\n    <StyledNav className={`toc`} onClick={onClick} />\n  );\n};\n\nexport default Toc;\n","import React, {FunctionComponent, RefObject, useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Theme from \"../../styles/theme\";\n\ninterface ReadingProgressProps {\n  target: RefObject<HTMLElement>;\n  color?: string;\n}\n\nconst ReadingProgressBar = styled.div<{ color?: string; }>`\n  position: sticky;\n  height: 5px;\n  top: 70px;\n  background-color: ${props => props.color ? props.color : Theme.layout.primaryColor};\n  z-index: 500;\n`;\n\nconst ReadingProgress: FunctionComponent<ReadingProgressProps> = ({color, target}) => {\n  const [readingProgress, setReadingProgress] = useState<number>(0);\n  const scrollListener                        = () => {\n    if (!target.current) {\n      return;\n    }\n\n    const element         = target.current;\n    const totalHeight     = element.clientHeight - element.offsetTop - (window.innerHeight);\n    const windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n\n    if (windowScrollTop === 0) {\n      return setReadingProgress(0);\n    }\n\n    if (windowScrollTop > totalHeight) {\n      return setReadingProgress(100);\n    }\n\n    setReadingProgress((windowScrollTop / totalHeight) * 100);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  });\n\n  return (\n    <ReadingProgressBar style={{width: `${readingProgress}%`}} color={color}/>\n  );\n};\n\nexport default ReadingProgress;\n","import React, {FunctionComponent} from \"react\";\n\n/**\n * Placeholder which is attached under every post. Can be shadowed to\n * quickly integrate comments (like commento, Disqus, ...).\n */\nconst Comments: FunctionComponent = () => <></>;\n\nexport default Comments;\n","import React, {createRef, FunctionComponent, useState} from \"react\";\nimport Layout from \"../components/layout\";\nimport {Post, Tag} from \"../utils/models\";\nimport {Container} from \"../components/common\";\nimport styled from \"styled-components\";\nimport Toc from \"../components/toc\";\nimport Img from \"gatsby-image\";\nimport ReadingProgress from \"../components/reading-progress\";\nimport Theme from \"../styles/theme\";\nimport {graphql, Link} from \"gatsby\";\nimport slugify from \"slugify\";\nimport Bio from \"../components/bio\";\nimport Comments from \"../components/comments\";\nimport SEO from \"../components/seo\";\nimport {FaAlignJustify, FaTimes} from \"react-icons/fa\";\n\ninterface PostTemplateProps {\n  data: {\n    primaryTag: Tag | null;\n    post: Post;\n  };\n  location: Location;\n}\n\nconst PostContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  padding: 0 !important;\n`;\n\nconst LeftSidebar = styled.div<{ show?: boolean }>`\n  min-width: 255px;\n  max-width: 225px;\n  transition: opacity .5s;\n\n  @media (max-width: ${Theme.breakpoints.xl}) {\n    position: fixed;\n    opacity: ${props => props.show ? 1 : 0};\n    z-index: 1000;\n    background-color: #fff;\n    width: 100% !important;\n    max-width: 100%;\n    padding: 0 20px;\n    margin-top: -5px;\n    height: calc(100vh - 70px);\n  }\n`;\n\nconst PostContent = styled.div`\n  margin-top: -5px;\n  border-right: 1px #e5eff5 solid;\n  border-left: 1px #e5eff5 solid;\n  background-color: #fff;\n  box-shadow: 0 0 3px rgba(0, 0, 0, .03), 0 3px 46px rgba(0, 0, 0, .1);\n  z-index: 10;\n  width: 1035px;\n  max-width: 100%;\n\n  li > a,\n  p > a {\n    color: ${Theme.layout.linkColor};\n    border-bottom: 2px ${Theme.layout.linkColor} solid;\n  }\n\n  pre {\n    margin: 30px 0;\n  }\n\n  blockquote {\n    border-left: 4px ${Theme.layout.primaryColor} solid;\n    background-color: ${Theme.layout.backgroundColor};\n    margin: 30px 0;\n    padding: 5px 20px;\n    border-radius: .3em;\n  }\n\n  h3::before, h4::before, h5::before, h6::before {\n    display: block;\n    content: \" \";\n    height: 90px;\n    margin-top: -90px;\n    visibility: hidden;\n  }\n\n  h2 {\n    border-top: 1px solid #ececec;\n    margin-top: 44px;\n    padding-top: 40px;\n    line-height: 1.2;\n  }\n\n  code[class*=\"language-text\"] {\n    padding: 5px;\n  }\n\n  p > img {\n    max-width: 100%;\n    border-radius: .3em;\n    margin: 30px 0;\n  }\n\n  hr {\n    border-top: 1px solid #ececec;\n    border-bottom: 0;\n    margin-top: 44px;\n    margin-bottom: 40px;\n  }\n\n  .gatsby-resp-image-link {\n    margin: 30px 0;\n    max-width: 100%;\n\n    .gatsby-resp-image-image {\n      border-radius: .3em;\n    }\n  }\n`;\n\nconst TocWrapper = styled.div`\n  position: sticky;\n  top: 70px;\n  padding: 40px 30px 40px 0;\n`;\n\nconst PostHeader = styled.header`\n  padding: 40px;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    padding: 20px;\n  }\n`;\n\nconst FeaturedImage = styled(Img)`\n  border-radius: 0;\n\n  @media (max-width: ${Theme.breakpoints.xl}) {\n    margin-left: -1px;\n    margin-right: -1px;\n  }\n`;\n\nconst StyledPost = styled.section`\n  padding: 40px;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    padding: 20px;\n  }\n`;\n\nconst PostMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  opacity: .8;\n  font-size: .9em;\n`;\n\nconst PostTitle = styled.h1`\n  margin: 0;\n  padding: 0;\n`;\n\nconst PostFooter = styled.footer`\n  background-color: #fafafa;\n  font-size: .8em;\n  color: #666;\n  padding: 40px;\n  line-height: 1em;\n\n  p {\n    margin: 5px 0;\n  }\n`;\n\nconst FooterTagLink = styled(Link)`\n  color: #000 !important;\n  text-decoration: none;\n  border-bottom: 0 !important;\n`;\n\nconst PostAddition = styled.section`\n  background-color: #fff;\n  border-top: 1px #e5eff5 solid;\n  border-bottom: 1px #e5eff5 solid;\n  z-index: 700;\n  position: relative;\n  padding: 40px;\n`;\n\nconst PostAdditionContent = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst BioWrapper = styled.div`\n  width: 50%;\n  margin: auto;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    width: 100%;\n  }\n`;\n\nconst ToggleTocButton = styled.button`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  right: 20px;\n  bottom: 20px;\n  border-radius: 100%;\n  box-shadow: 0 0 3px rgba(0, 0, 0, .03), 0 3px 46px rgba(0, 0, 0, .1);\n  border: 0;\n  z-index: 5000;\n  width: 50px;\n  height: 50px;\n  background-color: #20232a;\n  color: #fff;\n  outline: none;\n\n  @media (min-width: ${Theme.breakpoints.xl}) {\n    display: none;\n  }\n`;\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = ({data, location}) => {\n  const [showToc, setShowToc] = useState<boolean>(false);\n  const post                  = data.post;\n  const readingProgressRef    = createRef<HTMLElement>();\n  const primaryTag            = data.primaryTag;\n  const toggleToc             = () => setShowToc(!showToc);\n\n  return (\n    <Layout bigHeader={false}>\n      <SEO\n        location={location}\n        title={post.frontmatter.title}\n        publishedAt={post.frontmatter.created}\n        updatedAt={post.frontmatter.updated}\n        tags={post.frontmatter.tags}\n        description={post.frontmatter.excerpt}\n        image={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp.sizes.src : null}\n      />\n      <ReadingProgress target={readingProgressRef} color={primaryTag ? primaryTag.color : undefined}/>\n      <PostContainer>\n        {post.headings.find(h => h.depth > 1) &&\n        <>\n            <LeftSidebar show={showToc}>\n                <TocWrapper>\n                    <Toc onClick={toggleToc}/>\n                </TocWrapper>\n            </LeftSidebar>\n            <ToggleTocButton\n                role={`button`}\n                aria-label={`Toggle table of contents`}\n                onClick={toggleToc}\n            >\n              {showToc ? <FaTimes/> : <FaAlignJustify/>}\n            </ToggleTocButton>\n        </>\n        }\n        <PostContent>\n          <article className={`post`} ref={readingProgressRef}>\n            <PostHeader>\n              <PostMeta>\n                {post.frontmatter.tags.length > 0 &&\n                <Link to={`/tag/${slugify(post.frontmatter.tags[0], {lower: true})}`}>{post.frontmatter.tags[0]}</Link>\n                }\n                <time dateTime={post.frontmatter.created}>{post.frontmatter.createdPretty}</time>\n              </PostMeta>\n              <PostTitle>{post.frontmatter.title}</PostTitle>\n            </PostHeader>\n            {post.frontmatter.featuredImage &&\n            <FeaturedImage sizes={post.frontmatter.featuredImage.childImageSharp.sizes}/>\n            }\n            <StyledPost dangerouslySetInnerHTML={{__html: post.html}} className={`post`}/>\n            <PostFooter>\n              <p>\n                Published under&nbsp;\n                {post.frontmatter.tags.map((tag, index) => (\n                  <span key={index}>\n                    <FooterTagLink\n                      to={`/tag/${slugify(tag, {lower: true})}`}\n                    >\n                      {tag}\n                    </FooterTagLink>\n                    {post.frontmatter.tags.length > index + 1 && <>, </>}\n                  </span>\n                ))}\n                &nbsp;on <time dateTime={post.frontmatter.created}>{post.frontmatter.createdPretty}</time>.\n              </p>\n              {post.frontmatter.updated !== post.frontmatter.created &&\n              <p>Last updated on <time dateTime={post.frontmatter.updated}>{post.frontmatter.updatedPretty}</time>.</p>\n              }\n            </PostFooter>\n          </article>\n        </PostContent>\n      </PostContainer>\n      <PostAddition>\n        <PostAdditionContent>\n          <BioWrapper>\n            <Bio textAlign={`center`} showName={true}/>\n          </BioWrapper>\n        </PostAdditionContent>\n      </PostAddition>\n      <Comments/>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const query = graphql`\n  query PrimaryTag($postId: String!, $primaryTag: String!) {\n    post: markdownRemark(\n      id: { eq: $postId }\n    ) {\n      headings {\n        depth\n      }\n      frontmatter {\n        title\n        path\n        tags\n        excerpt\n        created\n        createdPretty: created(formatString: \"DD MMMM, YYYY\")\n        updated\n        updatedPretty: created(formatString: \"DD MMMM, YYYY\")\n        featuredImage {\n          childImageSharp {\n            sizes(maxWidth: 800, quality: 75) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n        }\n      }\n      html\n    }\n    primaryTag: tags(name: { eq: $primaryTag }) {\n      name\n      color\n    }\n  }\n`;\n","import React, {FunctionComponent} from \"react\";\nimport {SocialChannels} from \"../../utils/models\";\nimport styled from \"styled-components\";\nimport {\n  FaFacebook,\n  FaGithub,\n  FaInstagram,\n  FaLinkedin,\n  FaQuestionCircle,\n  FaTwitch,\n  FaTwitter,\n  FaYoutube,\n} from \"react-icons/fa\";\n\ninterface SocialChannelListProps {\n  channels: SocialChannels;\n}\n\n// Returns a proper icon for a given channel\nconst createSocialIcon = (channel: keyof SocialChannels) => {\n  switch (channel) {\n    case \"twitter\":\n      return <FaTwitter/>;\n    case \"facebook\":\n      return <FaFacebook/>;\n    case \"github\":\n      return <FaGithub/>;\n    case \"instagram\":\n      return <FaInstagram/>;\n    case \"linkedin\":\n      return <FaLinkedin/>;\n    case \"twitch\":\n      return <FaTwitch/>;\n    case \"youtube\":\n      return <FaYoutube/>;\n  }\n\n  return <FaQuestionCircle/>;\n};\n\nconst StyledSocialChannels = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSocialChannel = styled.li`\n  display: inline-block;\n  margin: 0 10px;\n  font-size: 1.6em;\n  opacity: .7;\n  transition: opacity .5s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst SocialChannelList: FunctionComponent<SocialChannelListProps> = ({channels}) => (\n  <StyledSocialChannels>\n    {(Object.keys(channels)).filter(c => channels[c] !== '').map((channel, index) => (\n      <StyledSocialChannel key={index}>\n        <a\n          href={channels[channel]}\n          target={`_blank`}\n          rel={`noopener`}\n          aria-label={channel}\n        >\n          {createSocialIcon(channel as keyof SocialChannels)}\n        </a>\n      </StyledSocialChannel>\n    ))}\n  </StyledSocialChannels>\n);\n\nexport default SocialChannelList;\n","import React, {CSSProperties, FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport Img from \"gatsby-image\";\n\ninterface AvatarProps {\n  alt: string;\n  style?: CSSProperties;\n}\n\nconst StyledAvatar = styled(Img)<AvatarProps>`\n  max-width: 55px;\n  border-radius: 100%;\n`;\n\n/**\n * Placeholder component which shows your avatar.\n */\nconst Avatar: FunctionComponent<AvatarProps> = ({alt, style}) => {\n  const logo = useStaticQuery(graphql`\n    query {\n      file(sourceInstanceName: {eq: \"themeAssets\"}, name: {eq: \"nehalist-gatsby\"}) {\n        childImageSharp {\n          fixed(width: 55, height: 55) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `);\n\n  return <StyledAvatar fixed={logo.file.childImageSharp.fixed} alt={alt} style={style} />;\n};\n\nexport default Avatar;\n","import React, {CSSProperties, FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport {SiteMetadata} from \"../../utils/models\";\nimport SocialChannelList from \"../social-channel-list\";\nimport Avatar from \"../avatar\";\n\ninterface BioProps {\n  textAlign: 'left' | 'center' | 'right' | 'justify';\n  avatarStyle?: CSSProperties;\n  showName?: boolean;\n}\n\nconst StyledBio = styled.section<Pick<BioProps, 'textAlign'>>`\n  margin: auto;\n  text-align: ${props => props.textAlign};\n  width: 100%;\n`;\n\nconst AuthorDescription = styled.p`\n  margin: 10px 0 13px;\n\n  a {\n    color: #000;\n    text-decoration: underline;\n  }\n`;\n\nconst AuthorName = styled.h3`\n  margin: 10px;\n`;\n\nconst Bio: FunctionComponent<BioProps> = ({textAlign = 'center', avatarStyle, showName = false}) => {\n  const metadata = useStaticQuery<SiteMetadata>(graphql`\n    query MetadataQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            description\n            social {\n              facebook\n              twitter\n              linkedin\n              instagram\n              youtube\n              github\n              twitch\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const author = metadata.site.siteMetadata.author;\n\n  return (\n    <StyledBio textAlign={textAlign}>\n      <Avatar alt={author.name} style={avatarStyle} />\n      {showName && <AuthorName>{author.name}</AuthorName>}\n      <AuthorDescription dangerouslySetInnerHTML={{__html: author.description}}/>\n      <SocialChannelList channels={author.social}/>\n    </StyledBio>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}