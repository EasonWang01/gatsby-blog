{"version":3,"sources":["webpack:///../theme/src/components/tag-list/style.tsx","webpack:///../theme/src/components/tag-list/index.tsx","webpack:///./src/@nehalist/gatsby-theme-nehalem/components/sidebar-content/style.tsx","webpack:///./src/@nehalist/gatsby-theme-nehalem/components/sidebar-content/index.tsx","webpack:///../theme/src/templates/posts.tsx","webpack:///../theme/src/components/card/style.tsx","webpack:///../theme/src/components/card/index.tsx","webpack:///../theme/src/components/social-channel-list/index.tsx","webpack:///../theme/src/components/avatar/index.tsx","webpack:///../theme/src/components/bio/index.tsx"],"names":["TagContainer","styled","section","withConfig","displayName","componentId","TagListTitle","h2","StyledTagList","ul","Theme","breakpoints","sm","StyledTag","li","TagIcon","img","TagName","span","TagArchiveLinkWrapper","div","TagArchiveLink","Link","TagList","tags","_1702881410","data","allTags","nodes","react_default","a","createElement","map","tag","index","icon","key","gatsby_browser_entry","to","slugify","name","lower","extension","gatsby_image_default","fixed","childImageSharp","src","publicURL","alt","AdStyle","createGlobalStyle","_templateObject","StickySidebarContent","DownloadButton","layout","primaryColor","SidebarContent","style","build_default","placement","serve","bio","textAlign","avatarStyle","float","marginRight","href","target","rel","aria-label","HomeContainer","Container","xl","PostsContainer","Grid","Sidebar","aside","ArchiveLinkWrapper","ArchiveLink","PostsPage","_ref","pathContext","location","posts","slice","postsPerPage","seo","type","post","card","title","frontmatter","path","featuredImage","content","excerpt","meta","time","created","timePretty","createdPretty","length","gridArea","undefined","halfImage","sidebar_content","tag_list","StyledCard","StyledArticle","article","FeaturedImage","Img","props","CardContent","compact","CardMeta","CardTitle","Card","_ref$halfImage","_ref$compact","children","sizes","Fragment","dateTime","dangerouslySetInnerHTML","__html","StyledSocialChannels","StyledSocialChannel","SocialChannelList","channels","Object","keys","filter","c","channel","index_esm","createSocialIcon","StyledAvatar","Avatar","logo","_3184828678","file","StyledBio","AuthorDescription","p","AuthorName","h3","Bio","_ref$textAlign","_ref$showName","showName","author","_3707852824","site","siteMetadata","avatar","description","social_channel_list","social"],"mappings":"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","file":"component---theme-src-templates-posts-tsx-f2d24f9cdf24b5baa3a3.js","sourcesContent":["import styled from \"styled-components\";\nimport Theme from \"../../styles/theme\";\nimport {Link} from \"gatsby\";\n\nexport const TagContainer = styled.section`\n  background-color: #fff;\n  border-top: 1px #e5eff5 solid;\n  border-bottom: 1px #e5eff5 solid;\n  padding: 40px;\n  margin-top: 75px;\n  text-align: center;\n`;\n\nexport const TagListTitle = styled.h2`\n  margin: 0 0 40px;\n`;\n\nexport const StyledTagList = styled.ul`\n  display: flex;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  justify-content: center;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n`;\n\nexport const StyledTag = styled.li`\n  margin: 0 35px;\n  transition: .5s all;\n\n  &:hover {\n    transform: scale(1.04);\n  }\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    width: 50%;\n    margin: 0 0 20px 0;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const TagIcon = styled.img`\n  max-height: 55px;\n`;\n\nexport const TagName = styled.span`\n  display: block;\n`;\n\nexport const TagArchiveLinkWrapper = styled.div`\n  display: block;\n  margin-top: 20px;\n`;\n\nexport const TagArchiveLink = styled(Link)`\n  font-style: italic;\n  font-size: .8em;\n`;\n","import React, {FunctionComponent} from \"react\";\nimport {graphql, Link, useStaticQuery} from \"gatsby\";\nimport {Tag} from \"../../utils/models\";\nimport Img from \"gatsby-image\";\nimport slugify from \"slugify\";\nimport {\n  StyledTag,\n  StyledTagList,\n  TagArchiveLink,\n  TagArchiveLinkWrapper,\n  TagContainer,\n  TagIcon,\n  TagListTitle,\n  TagName,\n} from \"./style\";\n\nconst TagList: FunctionComponent = () => {\n  const tagsQuery = useStaticQuery<{ allTags: { nodes: Tag[] } }>(graphql`\n    query Tags {\n      allTags(filter: {featured: { eq: true }}) {\n        nodes {\n          name\n          icon {\n            childImageSharp {\n              fixed(height: 55) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n            extension\n            publicURL\n          }\n        }\n      }\n    }\n  `);\n  const tags      = tagsQuery.allTags.nodes;\n\n  return (\n    <TagContainer>\n      <TagListTitle>Featured Tags</TagListTitle>\n      <StyledTagList>\n        {tags.map((tag, index) => {\n          const icon = tag.icon;\n          return (\n            <StyledTag key={index}>\n              <Link to={`/tag/${slugify(tag.name, {lower: true})}`}>\n                {/* gatsby-image doesn't handle SVGs, hence we need to take care of it */}\n                {icon.extension !== 'svg'\n                  ? <Img fixed={tag.icon.childImageSharp.fixed}/>\n                  : <TagIcon src={icon.publicURL} alt={tag.name}/>\n                }\n                <TagName>{tag.name}</TagName>\n              </Link>\n            </StyledTag>\n          );\n        })}\n      </StyledTagList>\n      <TagArchiveLinkWrapper>\n        <TagArchiveLink to={`/tags`}>See all tags</TagArchiveLink>\n      </TagArchiveLinkWrapper>\n    </TagContainer>\n  );\n};\n\nexport default TagList;\n","import {createGlobalStyle} from 'styled-components';\n\nconst AdStyle = createGlobalStyle`\n  #carbonads {\n    display: block;\n    overflow: hidden;\n    padding: 10px;\n    box-shadow: 0 1px 3px hsla(0, 0%, 0%, .05);\n    border-radius: 4px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell,\n      'Helvetica Neue', Helvetica, Arial, sans-serif;\n    line-height: 1.5;\n    max-width: 100%;\n    font-size: 12px;\n    background-color: #fff;\n    margin: 0 0 30px;\n\n    @include smallerThan(xs) {\n      min-width: 0;\n    }\n  }\n\n  #carbonads a {\n    text-decoration: none;\n  }\n\n  #carbonads span {\n    position: relative;\n    display: block;\n    overflow: hidden;\n  }\n\n  .carbon-img {\n    float: left;\n    margin-right: 1em;\n  }\n\n  .carbon-img img {\n    display: block;\n  }\n\n  .carbon-text {\n    display: block;\n    float: left;\n    max-width: calc(100% - 130px - 1em);\n    text-align: left;\n    color: #637381;\n  }\n\n  .carbon-poweredby {\n    position: absolute;\n    left: 142px;\n    bottom: 0;\n    display: block;\n    font-size: 8px;\n    color: #535965;\n    font-weight: 500;\n    text-transform: uppercase;\n    line-height: 1;\n    letter-spacing: 1px;\n  }\n`;\n\nexport default AdStyle;\n","import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport Bio from \"@nehalist/gatsby-theme-nehalem/src/components/bio\";\nimport Theme from \"@nehalist/gatsby-theme-nehalem/src/styles/theme\";\nimport Carbon from \"react-carbon\";\nimport AdStyle from \"./style\";\n\nconst StickySidebarContent = styled.div`\n  position: sticky;\n  top: 30px;\n`;\n\nconst DownloadButton = styled.a`\n  background-color: ${Theme.layout.primaryColor};\n  color: #fff;\n  font-weight: bold;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  display: block;\n  width: 100%;\n  padding: 15px;\n  font-size: 1.2em;\n  text-align: center;\n  border-radius: .3em;\n  margin: 30px 0;\n  transition: .5s all;\n\n  &:hover {\n    background-color: #84b89f;\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nconst SidebarContent: FunctionComponent = () => {\n  return (\n    <StickySidebarContent>\n      <AdStyle />\n      <Carbon name={`carbon-home`} placement={`nehalemnetlifycom`} serve={`CE7D453J`} />\n\n      <Bio textAlign={`justify`} avatarStyle={{float: `left`, marginRight: `10px`}}/>\n\n      <DownloadButton\n        href={`https://nehalem.netlify.com/getting-started`}\n        target={`_blank`}\n        rel={`noopener`}\n        aria-label={`Get this theme`}\n      >\n        Get this theme &#129321;\n      </DownloadButton>\n\n    </StickySidebarContent>\n  );\n};\n\nexport default SidebarContent;\n","import React, {FunctionComponent} from \"react\";\nimport Layout from \"../components/layout\";\nimport {Container, Grid} from \"../components/common\";\nimport {Post} from \"../utils/models\";\nimport {Card} from \"../components/card\";\nimport styled from \"styled-components\";\nimport TagList from \"../components/tag-list\";\nimport {Link} from \"gatsby\";\nimport SidebarContent from \"../components/sidebar-content\";\nimport SEO from \"../components/seo\";\nimport Theme from \"../styles/theme\";\n\ninterface PostsPageProps {\n  pathContext: {\n    posts: Post[];\n    postsPerPage: number;\n  };\n  location: Location;\n}\n\nconst HomeContainer = styled(Container)`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) .25fr;\n  grid-column-gap: 30px;\n\n  @media (max-width: ${Theme.breakpoints.xl}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst PostsContainer = styled(Grid)`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-areas: \"latest latest\" \". .\";\n  width: 100%;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: -30px;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    display: block;\n    padding: 0;\n\n    article {\n      margin-bottom: 30px;\n    }\n  }\n`;\n\nconst Sidebar = styled.aside`\n  width: 315px;\n  padding-top: 30px;\n\n  @media (max-width: ${Theme.breakpoints.xl}) {\n    margin: 30px auto;\n    border-top: 2px #e5eff5 solid;\n    padding: 20px;\n    width: 100%;\n  }\n`;\n\nconst ArchiveLinkWrapper = styled.div`\n  grid-column: 1 / -1;\n  text-align: center;\n`;\n\nconst ArchiveLink = styled(Link)`\n  font-size: .8em;\n  padding: 10px;\n  border-radius: .3em;\n  transition: background-color .5s;\n  background-color: #f2f2f2;\n\n  &:hover {\n    background-color: #e6e6e6;\n  }\n`;\n\nconst PostsPage: FunctionComponent<PostsPageProps> = ({ pathContext, location }) => {\n  const posts = pathContext.posts.slice(0, pathContext.postsPerPage);\n\n  return (\n    <Layout>\n      <SEO location={location} type={`WebSite`} />\n      <HomeContainer>\n        <PostsContainer>\n          {posts.map((post, index) => (\n            <Card\n              title={post.frontmatter.title}\n              path={post.frontmatter.path}\n              featuredImage={post.frontmatter.featuredImage ? post.frontmatter.featuredImage.childImageSharp : null}\n              content={post.frontmatter.excerpt}\n              key={index}\n              meta={\n                {\n                  time: post.frontmatter.created,\n                  timePretty: post.frontmatter.createdPretty,\n                  tag: post.frontmatter.tags.length > 0 ? post.frontmatter.tags[0] : null,\n                }\n              }\n              style={{gridArea: index === 0 ? 'latest' : undefined}}\n              halfImage={index === 0}\n            />\n          ))}\n          <ArchiveLinkWrapper>\n            <ArchiveLink to={`/archive`}>More posts</ArchiveLink>\n          </ArchiveLinkWrapper>\n        </PostsContainer>\n        <Sidebar>\n          <SidebarContent />\n        </Sidebar>\n      </HomeContainer>\n      <TagList />\n    </Layout>\n  );\n};\n\nexport default PostsPage;\n","import styled from \"styled-components\";\nimport {Link} from \"gatsby\";\nimport Theme from \"../../styles/theme\";\nimport Img from \"gatsby-image\";\nimport {CardProps} from \"./index\";\n\nexport const StyledCard = styled(Link)`\n  display: block;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0 1px 1px #e6e6e6, 0 2px 4px #e6e6e6;\n  transition: .5s all;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: translate3d(0, -5px, 0);\n    box-shadow: 0 1px 1px #ccc, 0 4px 4px #ccc;\n  }\n`;\n\nexport const StyledArticle = styled.article`\n  display: inline-block;\n  width: 100%;\n\n  @media (max-width: ${Theme.breakpoints.sm}) {\n    grid-area: unset !important;\n  }\n`;\n\nexport const FeaturedImage = styled(Img)<Pick<CardProps, 'halfImage'>>`\n  background-position: center;\n  background-size: cover;\n  max-width: 100%;\n  border-top-left-radius: 3px;\n\n  ${props => props.halfImage ? `\n    width: 50%;\n    float: left;\n    margin-right: 30px;\n    height: 320px;\n    border-bottom-left-radius: 3px;\n\n    @media (max-width: ${Theme.breakpoints.sm}) {\n      width: 100%;\n      float: none;\n      height: 190px;\n    }\n  ` : `\n    height: 190px;\n    max-height: 190px;\n    width: 100%;\n    border-top-right-radius: 3px;\n  `};\n`;\n\nexport const CardContent = styled.section<{ compact: boolean }>`\n  padding: ${props => props.compact ? '10px' : '40px'};\n\n  p {\n    margin: 15px 0;\n  }\n\n  h2 {\n    font-size: 1.2em;\n  }\n`;\n\nexport const CardMeta = styled.section`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n  font-size: .8em;\n  opacity: .8;\n  line-height: 1em;\n`;\n\nexport const CardTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n`;\n","import React, {CSSProperties, FunctionComponent, ReactNode} from \"react\";\nimport {CardContent, CardMeta, CardTitle, FeaturedImage, StyledArticle, StyledCard} from \"./style\";\n\nexport interface CardProps {\n  title?: string;\n  path: string;\n  featuredImage?: any;\n  content?: string;\n  meta?: {\n    time: string;\n    timePretty: string;\n    tag: string | null;\n  };\n  halfImage?: boolean;\n  compact?: boolean;\n  style?: CSSProperties;\n  children?: ReactNode;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n                                                     title,\n                                                     meta,\n                                                     path,\n                                                     featuredImage,\n                                                     content,\n                                                     halfImage = false,\n                                                     compact = false,\n                                                     style,\n                                                     children,\n                                                   }) => (\n  <StyledArticle style={style}>\n    <StyledCard to={path}>\n      {/* TODO: Oh boy... */}\n      {(featuredImage && featuredImage.fixed) &&\n      <FeaturedImage fixed={featuredImage.fixed} halfImage={halfImage}/>\n      }\n      {(featuredImage && featuredImage.sizes) &&\n      <FeaturedImage sizes={featuredImage.sizes} halfImage={halfImage}/>\n      }\n      <CardContent compact={compact}>\n        {children}\n        <header>\n          {meta &&\n          <CardMeta>\n            {meta.tag && <>{meta.tag}</>}\n            {meta.time &&\n            <time dateTime={meta.time}>{meta.timePretty}</time>\n            }\n          </CardMeta>\n          }\n          {title &&\n          <CardTitle>{title}</CardTitle>\n          }\n        </header>\n        {content &&\n        <p dangerouslySetInnerHTML={{__html: content}}/>\n        }\n      </CardContent>\n    </StyledCard>\n  </StyledArticle>\n);\n","import React, {FunctionComponent} from \"react\";\nimport {SocialChannels} from \"../../utils/models\";\nimport styled from \"styled-components\";\nimport {\n  FaFacebook,\n  FaGithub,\n  FaInstagram,\n  FaLinkedin,\n  FaQuestionCircle,\n  FaTwitch,\n  FaTwitter,\n  FaYoutube,\n} from \"react-icons/fa\";\n\ninterface SocialChannelListProps {\n  channels: SocialChannels;\n}\n\n// Returns a proper icon for a given channel\nconst createSocialIcon = (channel: keyof SocialChannels) => {\n  switch (channel) {\n    case \"twitter\":\n      return <FaTwitter/>;\n    case \"facebook\":\n      return <FaFacebook/>;\n    case \"github\":\n      return <FaGithub/>;\n    case \"instagram\":\n      return <FaInstagram/>;\n    case \"linkedin\":\n      return <FaLinkedin/>;\n    case \"twitch\":\n      return <FaTwitch/>;\n    case \"youtube\":\n      return <FaYoutube/>;\n  }\n\n  return <FaQuestionCircle/>;\n};\n\nconst StyledSocialChannels = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSocialChannel = styled.li`\n  display: inline-block;\n  margin: 0 10px;\n  font-size: 1.6em;\n  opacity: .7;\n  transition: opacity .5s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst SocialChannelList: FunctionComponent<SocialChannelListProps> = ({channels}) => (\n  <StyledSocialChannels>\n    {(Object.keys(channels)).filter(c => channels[c] !== '').map((channel, index) => (\n      <StyledSocialChannel key={index}>\n        <a\n          href={channels[channel]}\n          target={`_blank`}\n          rel={`noopener`}\n          aria-label={channel}\n        >\n          {createSocialIcon(channel as keyof SocialChannels)}\n        </a>\n      </StyledSocialChannel>\n    ))}\n  </StyledSocialChannels>\n);\n\nexport default SocialChannelList;\n","import React, {CSSProperties, FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport Img from \"gatsby-image\";\n\ninterface AvatarProps {\n  alt: string;\n  style?: CSSProperties;\n}\n\nconst StyledAvatar = styled(Img)<AvatarProps>`\n  max-width: 55px;\n  border-radius: 100%;\n`;\n\n/**\n * Placeholder component which shows your avatar.\n */\nconst Avatar: FunctionComponent<AvatarProps> = ({alt, style}) => {\n  const logo = useStaticQuery(graphql`\n    query {\n      file(sourceInstanceName: {eq: \"themeAssets\"}, name: {eq: \"nehalist-gatsby\"}) {\n        childImageSharp {\n          fixed(width: 55, height: 55) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `);\n\n  return <StyledAvatar fixed={logo.file.childImageSharp.fixed} alt={alt} style={style} />;\n};\n\nexport default Avatar;\n","import React, {CSSProperties, FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\nimport {graphql, useStaticQuery} from \"gatsby\";\nimport {SiteMetadata} from \"../../utils/models\";\nimport SocialChannelList from \"../social-channel-list\";\nimport Avatar from \"../avatar\";\n\ninterface BioProps {\n  textAlign: 'left' | 'center' | 'right' | 'justify';\n  avatarStyle?: CSSProperties;\n  showName?: boolean;\n}\n\nconst StyledBio = styled.section<Pick<BioProps, 'textAlign'>>`\n  margin: auto;\n  text-align: ${props => props.textAlign};\n  width: 100%;\n`;\n\nconst AuthorDescription = styled.p`\n  margin: 10px 0 13px;\n\n  a {\n    color: #000;\n    text-decoration: underline;\n  }\n`;\n\nconst AuthorName = styled.h3`\n  margin: 10px;\n`;\n\nconst Bio: FunctionComponent<BioProps> = ({textAlign = 'center', avatarStyle, showName = false}) => {\n  const metadata = useStaticQuery<SiteMetadata>(graphql`\n    query MetadataQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            description\n            social {\n              facebook\n              twitter\n              linkedin\n              instagram\n              youtube\n              github\n              twitch\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const author = metadata.site.siteMetadata.author;\n\n  return (\n    <StyledBio textAlign={textAlign}>\n      <Avatar alt={author.name} style={avatarStyle} />\n      {showName && <AuthorName>{author.name}</AuthorName>}\n      <AuthorDescription dangerouslySetInnerHTML={{__html: author.description}}/>\n      <SocialChannelList channels={author.social}/>\n    </StyledBio>\n  );\n};\n\nexport default Bio;\n"],"sourceRoot":""}